{"version":3,"sources":["../../../src/components/interactive-map.js"],"names":["propTypes","Object","assign","StaticMap","maxZoom","PropTypes","number","minZoom","maxPitch","minPitch","onViewStateChange","func","onViewportChange","transitionDuration","transitionInterpolator","object","transitionInterruption","transitionEasing","onTransitionStart","onTransitionInterrupt","onTransitionEnd","scrollZoom","bool","dragPan","dragRotate","doubleClickZoom","touchZoom","touchRotate","keyboard","onHover","onClick","onContextMenu","touchAction","string","clickRadius","getCursor","visibilityConstraints","shape","mapControls","events","arrayOf","handleEvent","getDefaultCursor","isDragging","isHovering","config","CURSOR","GRABBING","POINTER","GRAB","defaultProps","MAPBOX_LIMITS","TransitionManager","event","preventDefault","childContextTypes","viewport","instanceOf","WebMercatorViewport","eventManager","InteractiveMap","supported","props","state","_mapControls","MapControls","_eventManager","EventManager","legacyBlockScroll","getMap","bind","queryRenderedFeatures","_checkVisibilityConstraints","_getFeatures","_onInteractiveStateChange","_getPos","_eventCanvasLoaded","_staticMapLoaded","on","mousemove","_onMouseMove","click","_onMouseClick","contextmenu","_onContextMenu","setOptions","viewState","onStateChange","_transitionManager","nextProps","nextPropsWithViewState","processViewportChange","_map","geometry","options","capitalize","s","toUpperCase","slice","propName","capitalizedPropName","minPropName","maxPropName","pos","radius","features","size","bbox","setState","offsetCenter","x","y","length","lngLat","unproject","ref","setElement","width","height","eventCanvasStyle","position","cursor","key","style","getViewportInTransition","visible","children","PureComponent","displayName"],"mappings":";;;;;;;AAAA;;AACA;;AAEA;;AACA;;AACA;;AAEA;;AAEA;;AACA;;AACA;;AACA;;;;;;;;;;;;;;;;;;;;;;AAEA,IAAMA,YAAYC,OAAOC,MAAP,CAAc,EAAd,EAAkBC,mBAAUH,SAA5B,EAAuC;AACvD;;AAEA;AACA;AACAI,WAASC,mBAAUC,MALoC;AAMvD;AACAC,WAASF,mBAAUC,MAPoC;AAQvD;AACAE,YAAUH,mBAAUC,MATmC;AAUvD;AACAG,YAAUJ,mBAAUC,MAXmC;AAavD;AACA;AACAI,qBAAmBL,mBAAUM,IAf0B;AAgBvDC,oBAAkBP,mBAAUM,IAhB2B;;AAkBvD;AACA;AACAE,sBAAoBR,mBAAUC,MApByB;AAqBvD;AACAQ,0BAAwBT,mBAAUU,MAtBqB;AAuBvD;AACAC,0BAAwBX,mBAAUC,MAxBqB;AAyBvD;AACAW,oBAAkBZ,mBAAUM,IA1B2B;AA2BvD;AACAO,qBAAmBb,mBAAUM,IA5B0B;AA6BvDQ,yBAAuBd,mBAAUM,IA7BsB;AA8BvDS,mBAAiBf,mBAAUM,IA9B4B;;AAgCvD;AACA;AACAU,cAAYhB,mBAAUiB,IAlCiC;AAmCvD;AACAC,WAASlB,mBAAUiB,IApCoC;AAqCvD;AACAE,cAAYnB,mBAAUiB,IAtCiC;AAuCvD;AACAG,mBAAiBpB,mBAAUiB,IAxC4B;AAyCvD;AACAI,aAAWrB,mBAAUiB,IA1CkC;AA2CvD;AACAK,eAAatB,mBAAUiB,IA5CgC;AA6CvD;AACAM,YAAUvB,mBAAUiB,IA9CmC;;AAgDxD;;;;;;;;;;;;AAYCO,WAASxB,mBAAUM,IA5DoC;;AA6DvD;;;;;;;;;;;;AAYAmB,WAASzB,mBAAUM,IAzEoC;;AA0EvD;;;AAGAoB,iBAAe1B,mBAAUM,IA7E8B;;AA+EvD;AACAqB,eAAa3B,mBAAU4B,MAhFgC;;AAkFvD;AACAC,eAAa7B,mBAAUC,MAnFgC;;AAqFvD;AACA6B,aAAW9B,mBAAUM,IAtFkC;;AAwFvD;AACA;AACA;AACAyB,yBAAuB/B,mBAAUgC,KAAV,CAAgB;AACrC9B,aAASF,mBAAUC,MADkB;AAErCF,aAASC,mBAAUC,MAFkB;AAGrCG,cAAUJ,mBAAUC,MAHiB;AAIrCE,cAAUH,mBAAUC;AAJiB,GAAhB,CA3FgC;AAiGvD;AACA;AACA;AACAgC,eAAajC,mBAAUgC,KAAV,CAAgB;AAC3BE,YAAQlC,mBAAUmC,OAAV,CAAkBnC,mBAAU4B,MAA5B,CADmB;AAE3BQ,iBAAapC,mBAAUM;AAFI,GAAhB;AApG0C,CAAvC,CAAlB;;AA0GA,IAAM+B,mBAAmB,SAAnBA,gBAAmB;AAAA,MAAEC,UAAF,QAAEA,UAAF;AAAA,MAAcC,UAAd,QAAcA,UAAd;AAAA,SAA8BD,aACrDE,gBAAOC,MAAP,CAAcC,QADuC,GAEpDH,aAAaC,gBAAOC,MAAP,CAAcE,OAA3B,GAAqCH,gBAAOC,MAAP,CAAcG,IAF7B;AAAA,CAAzB;;AAIA,IAAMC,eAAejD,OAAOC,MAAP,CAAc,EAAd,EACnBC,mBAAU+C,YADS,EACKC,uBADL,EACoBC,2BAAkBF,YADtC,EAEnB;AACExC,qBAAmB,IADrB;AAEEE,oBAAkB,IAFpB;AAGEkB,WAAS,IAHX;AAIED,WAAS,IAJX;AAKEE,iBAAe;AAAA,WAASsB,MAAMC,cAAN,EAAT;AAAA,GALjB;AAOEjC,cAAY,IAPd;AAQEE,WAAS,IARX;AASEC,cAAY,IATd;AAUEC,mBAAiB,IAVnB;AAYEO,eAAa,MAZf;AAaEE,eAAa,CAbf;AAcEC,aAAWO,gBAdb;AAgBEN,yBAAuBe;AAhBzB,CAFmB,CAArB;AAsBA,IAAMI,oBAAoB;AACxBC,YAAUnD,mBAAUoD,UAAV,CAAqBC,gCAArB,CADc;AAExBf,cAAYtC,mBAAUiB,IAFE;AAGxBqC,gBAActD,mBAAUU;AAHA,CAA1B;;IAMqB6C,c;;;;;;;gCAEA;AACjB,aAAOzD,mBAAU0D,SAAV,EAAP;AACD;;;AAED,0BAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,4HAAMA,KAAN,GADiB,CAEjB;;AACA,gCAAcA,KAAd;AAEA,UAAKC,KAAL,GAAa;AACX;AACApB,kBAAY,KAFD;AAGX;AACAC,kBAAY;AAJD,KAAb,CALiB,CAYjB;AACA;;AACA,UAAKoB,YAAL,GAAoBF,MAAMxB,WAAN,IAAqB,IAAI2B,oBAAJ,EAAzC;AAEA,UAAKC,aAAL,GAAqB,IAAIC,qBAAJ,CAAiB,IAAjB,EAAuB;AAC1CC,yBAAmB,KADuB;AAE1CpC,mBAAa8B,MAAM9B;AAFuB,KAAvB,CAArB;AAKA,UAAKqC,MAAL,GAAc,MAAKA,MAAL,CAAYC,IAAZ,+BAAd;AACA,UAAKC,qBAAL,GAA6B,MAAKA,qBAAL,CAA2BD,IAA3B,+BAA7B;AACA,UAAKE,2BAAL,GAAmC,MAAKA,2BAAL,CAAiCF,IAAjC,+BAAnC;AACA,UAAKG,YAAL,GAAoB,MAAKA,YAAL,CAAkBH,IAAlB,+BAApB;AACA,UAAKI,yBAAL,GAAiC,MAAKA,yBAAL,CAA+BJ,IAA/B,+BAAjC;AACA,UAAKK,OAAL,GAAe,MAAKA,OAAL,CAAaL,IAAb,+BAAf;AACA,UAAKM,kBAAL,GAA0B,MAAKA,kBAAL,CAAwBN,IAAxB,+BAA1B;AACA,UAAKO,gBAAL,GAAwB,MAAKA,gBAAL,CAAsBP,IAAtB,+BAAxB;AA5BiB;AA6BlB;;;;sCAEiB;AAChB,aAAO;AACLd,kBAAU,IAAIE,gCAAJ,CAAwB,KAAKI,KAA7B,CADL;AAELnB,oBAAY,KAAKoB,KAAL,CAAWpB,UAFlB;AAGLgB,sBAAc,KAAKO;AAHd,OAAP;AAKD;;;wCAEmB;AAClB,UAAMP,eAAe,KAAKO,aAA1B,CADkB,CAGlB;;AACAP,mBAAamB,EAAb,CAAgB;AACdC,mBAAW,KAAKC,YAAL,CAAkBV,IAAlB,CAAuB,IAAvB,CADG;AAEdW,eAAO,KAAKC,aAAL,CAAmBZ,IAAnB,CAAwB,IAAxB,CAFO;AAGda,qBAAa,KAAKC,cAAL,CAAoBd,IAApB,CAAyB,IAAzB;AAHC,OAAhB;;AAMA,WAAKN,YAAL,CAAkBqB,UAAlB,CAA6BpF,OAAOC,MAAP,CAAc,EAAd,EAAkB,KAAK4D,KAAvB,EAA8B,KAAKA,KAAL,CAAWwB,SAAzC,EAAoD;AAC/EC,uBAAe,KAAKb,yBAD2D;AAE/Ef;AAF+E,OAApD,CAA7B;;AAKA,WAAK6B,kBAAL,GAA0B,IAAIpC,0BAAJ,CAAsB,KAAKU,KAA3B,CAA1B;AACD;;;wCAEmB2B,S,EAAW;AAC7B,UAAMC,yBAAyBzF,OAAOC,MAAP,CAAc,EAAd,EAAkBuF,SAAlB,EAA6BA,UAAUH,SAAvC,CAA/B;;AACA,WAAKtB,YAAL,CAAkBqB,UAAlB,CAA6BK,sBAA7B;;AACA,WAAKF,kBAAL,CAAwBG,qBAAxB,CAA8CD,sBAA9C;AACD;;;6BAEQ;AACP,aAAO,KAAKE,IAAL,GAAY,KAAKA,IAAL,CAAUvB,MAAV,EAAZ,GAAiC,IAAxC;AACD;;;0CAEqBwB,Q,EAAUC,O,EAAS;AACvC,aAAO,KAAKF,IAAL,CAAUrB,qBAAV,CAAgCsB,QAAhC,EAA0CC,OAA1C,CAAP;AACD,K,CAED;;;;gDAC4BhC,K,EAAO;AACjC,UAAMiC,aAAa,SAAbA,UAAa;AAAA,eAAKC,EAAE,CAAF,EAAKC,WAAL,KAAqBD,EAAEE,KAAF,CAAQ,CAAR,CAA1B;AAAA,OAAnB;;AADiC,UAG1B9D,qBAH0B,GAGD0B,KAHC,CAG1B1B,qBAH0B;;AAIjC,WAAK,IAAM+D,QAAX,IAAuBrC,KAAvB,EAA8B;AAC5B,YAAMsC,sBAAsBL,WAAWI,QAAX,CAA5B;AACA,YAAME,2BAAoBD,mBAApB,CAAN;AACA,YAAME,2BAAoBF,mBAApB,CAAN;;AAEA,YAAIC,eAAejE,qBAAf,IACF0B,MAAMqC,QAAN,IAAkB/D,sBAAsBiE,WAAtB,CADpB,EACwD;AACtD,iBAAO,KAAP;AACD;;AACD,YAAIC,eAAelE,qBAAf,IACF0B,MAAMqC,QAAN,IAAkB/D,sBAAsBkE,WAAtB,CADpB,EACwD;AACtD,iBAAO,KAAP;AACD;AACF;;AACD,aAAO,IAAP;AACD;;;wCAE2B;AAAA,UAAdC,GAAc,SAAdA,GAAc;AAAA,UAATC,MAAS,SAATA,MAAS;AAC1B,UAAIC,QAAJ;;AACA,UAAID,MAAJ,EAAY;AACV;AACA,YAAME,OAAOF,MAAb;AACA,YAAMG,OAAO,CAAC,CAACJ,IAAI,CAAJ,IAASG,IAAV,EAAgBH,IAAI,CAAJ,IAASG,IAAzB,CAAD,EAAiC,CAACH,IAAI,CAAJ,IAASG,IAAV,EAAgBH,IAAI,CAAJ,IAASG,IAAzB,CAAjC,CAAb;AACAD,mBAAW,KAAKb,IAAL,CAAUrB,qBAAV,CAAgCoC,IAAhC,CAAX;AACD,OALD,MAKO;AACLF,mBAAW,KAAKb,IAAL,CAAUrB,qBAAV,CAAgCgC,GAAhC,CAAX;AACD;;AACD,aAAOE,QAAP;AACD;;;qDAE+C;AAAA,mCAArB9D,UAAqB;AAAA,UAArBA,UAAqB,iCAAR,KAAQ;;AAC9C,UAAIA,eAAe,KAAKoB,KAAL,CAAWpB,UAA9B,EAA0C;AACxC,aAAKiE,QAAL,CAAc;AAACjE;AAAD,SAAd;AACD;AACF,K,CAED;;;;4BACQU,K,EAAO;AAAA,gCACkBA,KADlB,CACNwD,YADM;AAAA,UACSC,CADT,uBACSA,CADT;AAAA,UACYC,CADZ,uBACYA,CADZ;AAEb,aAAO,CAACD,CAAD,EAAIC,CAAJ,CAAP;AACD;;;iCAEY1D,K,EAAO;AAClB,UAAI,CAAC,KAAKU,KAAL,CAAWpB,UAAhB,EAA4B;AAC1B,YAAM4D,MAAM,KAAK5B,OAAL,CAAatB,KAAb,CAAZ;;AACA,YAAMoD,WAAW,KAAKhC,YAAL,CAAkB;AAAC8B,kBAAD;AAAMC,kBAAQ,KAAK1C,KAAL,CAAW5B;AAAzB,SAAlB,CAAjB;;AAEA,YAAMU,aAAa6D,YAAYA,SAASO,MAAT,GAAkB,CAAjD;;AACA,YAAIpE,eAAe,KAAKmB,KAAL,CAAWnB,UAA9B,EAA0C;AACxC,eAAKgE,QAAL,CAAc;AAAChE;AAAD,WAAd;AACD;;AAED,YAAI,KAAKkB,KAAL,CAAWjC,OAAf,EAAwB;AACtB,cAAM2B,WAAW,IAAIE,gCAAJ,CAAwB,KAAKI,KAA7B,CAAjB;AACAT,gBAAM4D,MAAN,GAAezD,SAAS0D,SAAT,CAAmBX,GAAnB,CAAf;AACAlD,gBAAMoD,QAAN,GAAiBA,QAAjB;AAEA,eAAK3C,KAAL,CAAWjC,OAAX,CAAmBwB,KAAnB;AACD;AACF;AACF;;;kCAEaA,K,EAAO;AACnB,UAAI,KAAKS,KAAL,CAAWhC,OAAf,EAAwB;AACtB,YAAMyE,MAAM,KAAK5B,OAAL,CAAatB,KAAb,CAAZ;;AACA,YAAMG,WAAW,IAAIE,gCAAJ,CAAwB,KAAKI,KAA7B,CAAjB;AACAT,cAAM4D,MAAN,GAAezD,SAAS0D,SAAT,CAAmBX,GAAnB,CAAf;AACAlD,cAAMoD,QAAN,GAAiB,KAAKhC,YAAL,CAAkB;AAAC8B,kBAAD;AAAMC,kBAAQ,KAAK1C,KAAL,CAAW5B;AAAzB,SAAlB,CAAjB;AAEA,aAAK4B,KAAL,CAAWhC,OAAX,CAAmBuB,KAAnB;AACD;AACF;;;mCAEcA,K,EAAO;AACpB,UAAI,KAAKS,KAAL,CAAW/B,aAAf,EAA8B;AAC5B,aAAK+B,KAAL,CAAW/B,aAAX,CAAyBsB,KAAzB;AACD;AACF;;;uCAEkB8D,G,EAAK;AACtB;AACA,WAAKjD,aAAL,CAAmBkD,UAAnB,CAA8BD,GAA9B;AACD;;;qCAEgBA,G,EAAK;AACpB,WAAKvB,IAAL,GAAYuB,GAAZ;AACD;;;6BAEQ;AAAA,wBAC4B,KAAKrD,KADjC;AAAA,UACAuD,KADA,eACAA,KADA;AAAA,UACOC,MADP,eACOA,MADP;AAAA,UACenF,SADf,eACeA,SADf;AAGP,UAAMoF,mBAAmB;AACvBF,oBADuB;AAEvBC,sBAFuB;AAGvBE,kBAAU,UAHa;AAIvBC,gBAAQtF,UAAU,KAAK4B,KAAf;AAJe,OAAzB;AAOA,aACE,0BAAc,KAAd,EAAqB;AACnB2D,aAAK,cADc;AAEnBP,aAAK,KAAKvC,kBAFS;AAGnB+C,eAAOJ;AAHY,OAArB,EAKE,0BAAcpH,kBAAd,EAAyBF,OAAOC,MAAP,CAAc,EAAd,EAAkB,KAAK4D,KAAvB,EACvB,KAAK0B,kBAAL,IAA2B,KAAKA,kBAAL,CAAwBoC,uBAAxB,EADJ,EAEvB;AACEC,iBAAS,KAAKrD,2BAAL,CAAiC,KAAKV,KAAtC,CADX;AAEEqD,aAAK,KAAKtC,gBAFZ;AAGEiD,kBAAU,KAAKhE,KAAL,CAAWgE;AAHvB,OAFuB,CAAzB,CALF,CADF;AAgBD;;;;EApMyCC,oB;;;AAuM5CnE,eAAeoE,WAAf,GAA6B,gBAA7B;AACApE,eAAe5D,SAAf,GAA2BA,SAA3B;AACA4D,eAAeV,YAAf,GAA8BA,YAA9B;AACAU,eAAeL,iBAAf,GAAmCA,iBAAnC","sourcesContent":["import {PureComponent, createElement} from 'react';\nimport PropTypes from 'prop-types';\n\nimport StaticMap from './static-map';\nimport {MAPBOX_LIMITS} from '../utils/map-state';\nimport WebMercatorViewport from 'viewport-mercator-project';\n\nimport TransitionManager from '../utils/transition-manager';\n\nimport {EventManager} from 'mjolnir.js';\nimport MapControls from '../utils/map-controls';\nimport config from '../config';\nimport deprecateWarn from '../utils/deprecate-warn';\n\nconst propTypes = Object.assign({}, StaticMap.propTypes, {\n  // Additional props on top of StaticMap\n\n  /** Viewport constraints */\n  // Max zoom level\n  maxZoom: PropTypes.number,\n  // Min zoom level\n  minZoom: PropTypes.number,\n  // Max pitch in degrees\n  maxPitch: PropTypes.number,\n  // Min pitch in degrees\n  minPitch: PropTypes.number,\n\n  // Callbacks fired when the user interacted with the map. The object passed to the callbacks\n  // contains viewport properties such as `longitude`, `latitude`, `zoom` etc.\n  onViewStateChange: PropTypes.func,\n  onViewportChange: PropTypes.func,\n\n  /** Viewport transition **/\n  // transition duration for viewport change\n  transitionDuration: PropTypes.number,\n  // TransitionInterpolator instance, can be used to perform custom transitions.\n  transitionInterpolator: PropTypes.object,\n  // type of interruption of current transition on update.\n  transitionInterruption: PropTypes.number,\n  // easing function\n  transitionEasing: PropTypes.func,\n  // transition status update functions\n  onTransitionStart: PropTypes.func,\n  onTransitionInterrupt: PropTypes.func,\n  onTransitionEnd: PropTypes.func,\n\n  /** Enables control event handling */\n  // Scroll to zoom\n  scrollZoom: PropTypes.bool,\n  // Drag to pan\n  dragPan: PropTypes.bool,\n  // Drag to rotate\n  dragRotate: PropTypes.bool,\n  // Double click to zoom\n  doubleClickZoom: PropTypes.bool,\n  // Multitouch zoom\n  touchZoom: PropTypes.bool,\n  // Multitouch rotate\n  touchRotate: PropTypes.bool,\n  // Keyboard\n  keyboard: PropTypes.bool,\n\n /**\n    * Called when the map is hovered over.\n    * @callback\n    * @param {Object} event - The mouse event.\n    * @param {[Number, Number]} event.lngLat - The coordinates of the pointer\n    * @param {Array} event.features - The features under the pointer, using Mapbox's\n    * queryRenderedFeatures API:\n    * https://www.mapbox.com/mapbox-gl-js/api/#Map#queryRenderedFeatures\n    * To make a layer interactive, set the `interactive` property in the\n    * layer style to `true`. See Mapbox's style spec\n    * https://www.mapbox.com/mapbox-gl-style-spec/#layer-interactive\n    */\n  onHover: PropTypes.func,\n  /**\n    * Called when the map is clicked.\n    * @callback\n    * @param {Object} event - The mouse event.\n    * @param {[Number, Number]} event.lngLat - The coordinates of the pointer\n    * @param {Array} event.features - The features under the pointer, using Mapbox's\n    * queryRenderedFeatures API:\n    * https://www.mapbox.com/mapbox-gl-js/api/#Map#queryRenderedFeatures\n    * To make a layer interactive, set the `interactive` property in the\n    * layer style to `true`. See Mapbox's style spec\n    * https://www.mapbox.com/mapbox-gl-style-spec/#layer-interactive\n    */\n  onClick: PropTypes.func,\n  /**\n    * Called when the context menu is activated.\n    */\n  onContextMenu: PropTypes.func,\n\n  /** Custom touch-action CSS for the event canvas. Defaults to 'none' */\n  touchAction: PropTypes.string,\n\n  /** Radius to detect features around a clicked point. Defaults to 0. */\n  clickRadius: PropTypes.number,\n\n  /** Accessor that returns a cursor style to show interactive state */\n  getCursor: PropTypes.func,\n\n  /** Advanced features */\n  // Contraints for displaying the map. If not met, then the map is hidden.\n  // Experimental! May be changed in minor version updates.\n  visibilityConstraints: PropTypes.shape({\n    minZoom: PropTypes.number,\n    maxZoom: PropTypes.number,\n    minPitch: PropTypes.number,\n    maxPitch: PropTypes.number\n  }),\n  // A map control instance to replace the default map controls\n  // The object must expose one property: `events` as an array of subscribed\n  // event names; and two methods: `setState(state)` and `handle(event)`\n  mapControls: PropTypes.shape({\n    events: PropTypes.arrayOf(PropTypes.string),\n    handleEvent: PropTypes.func\n  })\n});\n\nconst getDefaultCursor = ({isDragging, isHovering}) => isDragging ?\n  config.CURSOR.GRABBING :\n  (isHovering ? config.CURSOR.POINTER : config.CURSOR.GRAB);\n\nconst defaultProps = Object.assign({},\n  StaticMap.defaultProps, MAPBOX_LIMITS, TransitionManager.defaultProps,\n  {\n    onViewStateChange: null,\n    onViewportChange: null,\n    onClick: null,\n    onHover: null,\n    onContextMenu: event => event.preventDefault(),\n\n    scrollZoom: true,\n    dragPan: true,\n    dragRotate: true,\n    doubleClickZoom: true,\n\n    touchAction: 'none',\n    clickRadius: 0,\n    getCursor: getDefaultCursor,\n\n    visibilityConstraints: MAPBOX_LIMITS\n  }\n);\n\nconst childContextTypes = {\n  viewport: PropTypes.instanceOf(WebMercatorViewport),\n  isDragging: PropTypes.bool,\n  eventManager: PropTypes.object\n};\n\nexport default class InteractiveMap extends PureComponent {\n\n  static supported() {\n    return StaticMap.supported();\n  }\n\n  constructor(props) {\n    super(props);\n    // Check for deprecated props\n    deprecateWarn(props);\n\n    this.state = {\n      // Whether the cursor is down\n      isDragging: false,\n      // Whether the cursor is over a clickable feature\n      isHovering: false\n    };\n\n    // If props.mapControls is not provided, fallback to default MapControls instance\n    // Cannot use defaultProps here because it needs to be per map instance\n    this._mapControls = props.mapControls || new MapControls();\n\n    this._eventManager = new EventManager(null, {\n      legacyBlockScroll: false,\n      touchAction: props.touchAction\n    });\n\n    this.getMap = this.getMap.bind(this);\n    this.queryRenderedFeatures = this.queryRenderedFeatures.bind(this);\n    this._checkVisibilityConstraints = this._checkVisibilityConstraints.bind(this);\n    this._getFeatures = this._getFeatures.bind(this);\n    this._onInteractiveStateChange = this._onInteractiveStateChange.bind(this);\n    this._getPos = this._getPos.bind(this);\n    this._eventCanvasLoaded = this._eventCanvasLoaded.bind(this);\n    this._staticMapLoaded = this._staticMapLoaded.bind(this);\n  }\n\n  getChildContext() {\n    return {\n      viewport: new WebMercatorViewport(this.props),\n      isDragging: this.state.isDragging,\n      eventManager: this._eventManager\n    };\n  }\n\n  componentDidMount() {\n    const eventManager = this._eventManager;\n\n    // Register additional event handlers for click and hover\n    eventManager.on({\n      mousemove: this._onMouseMove.bind(this),\n      click: this._onMouseClick.bind(this),\n      contextmenu: this._onContextMenu.bind(this)\n    });\n\n    this._mapControls.setOptions(Object.assign({}, this.props, this.props.viewState, {\n      onStateChange: this._onInteractiveStateChange,\n      eventManager\n    }));\n\n    this._transitionManager = new TransitionManager(this.props);\n  }\n\n  componentWillUpdate(nextProps) {\n    const nextPropsWithViewState = Object.assign({}, nextProps, nextProps.viewState);\n    this._mapControls.setOptions(nextPropsWithViewState);\n    this._transitionManager.processViewportChange(nextPropsWithViewState);\n  }\n\n  getMap() {\n    return this._map ? this._map.getMap() : null;\n  }\n\n  queryRenderedFeatures(geometry, options) {\n    return this._map.queryRenderedFeatures(geometry, options);\n  }\n\n  // Checks a visibilityConstraints object to see if the map should be displayed\n  _checkVisibilityConstraints(props) {\n    const capitalize = s => s[0].toUpperCase() + s.slice(1);\n\n    const {visibilityConstraints} = props;\n    for (const propName in props) {\n      const capitalizedPropName = capitalize(propName);\n      const minPropName = `min${capitalizedPropName}`;\n      const maxPropName = `max${capitalizedPropName}`;\n\n      if (minPropName in visibilityConstraints &&\n        props[propName] < visibilityConstraints[minPropName]) {\n        return false;\n      }\n      if (maxPropName in visibilityConstraints &&\n        props[propName] > visibilityConstraints[maxPropName]) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  _getFeatures({pos, radius}) {\n    let features;\n    if (radius) {\n      // Radius enables point features, like marker symbols, to be clicked.\n      const size = radius;\n      const bbox = [[pos[0] - size, pos[1] + size], [pos[0] + size, pos[1] - size]];\n      features = this._map.queryRenderedFeatures(bbox);\n    } else {\n      features = this._map.queryRenderedFeatures(pos);\n    }\n    return features;\n  }\n\n  _onInteractiveStateChange({isDragging = false}) {\n    if (isDragging !== this.state.isDragging) {\n      this.setState({isDragging});\n    }\n  }\n\n  // HOVER AND CLICK\n  _getPos(event) {\n    const {offsetCenter: {x, y}} = event;\n    return [x, y];\n  }\n\n  _onMouseMove(event) {\n    if (!this.state.isDragging) {\n      const pos = this._getPos(event);\n      const features = this._getFeatures({pos, radius: this.props.clickRadius});\n\n      const isHovering = features && features.length > 0;\n      if (isHovering !== this.state.isHovering) {\n        this.setState({isHovering});\n      }\n\n      if (this.props.onHover) {\n        const viewport = new WebMercatorViewport(this.props);\n        event.lngLat = viewport.unproject(pos);\n        event.features = features;\n\n        this.props.onHover(event);\n      }\n    }\n  }\n\n  _onMouseClick(event) {\n    if (this.props.onClick) {\n      const pos = this._getPos(event);\n      const viewport = new WebMercatorViewport(this.props);\n      event.lngLat = viewport.unproject(pos);\n      event.features = this._getFeatures({pos, radius: this.props.clickRadius});\n\n      this.props.onClick(event);\n    }\n  }\n\n  _onContextMenu(event) {\n    if (this.props.onContextMenu) {\n      this.props.onContextMenu(event);\n    }\n  }\n\n  _eventCanvasLoaded(ref) {\n    // This will be called with `null` after unmount, releasing event manager resource\n    this._eventManager.setElement(ref);\n  }\n\n  _staticMapLoaded(ref) {\n    this._map = ref;\n  }\n\n  render() {\n    const {width, height, getCursor} = this.props;\n\n    const eventCanvasStyle = {\n      width,\n      height,\n      position: 'relative',\n      cursor: getCursor(this.state)\n    };\n\n    return (\n      createElement('div', {\n        key: 'map-controls',\n        ref: this._eventCanvasLoaded,\n        style: eventCanvasStyle\n      },\n        createElement(StaticMap, Object.assign({}, this.props,\n          this._transitionManager && this._transitionManager.getViewportInTransition(),\n          {\n            visible: this._checkVisibilityConstraints(this.props),\n            ref: this._staticMapLoaded,\n            children: this.props.children\n          }\n        ))\n      )\n    );\n  }\n}\n\nInteractiveMap.displayName = 'InteractiveMap';\nInteractiveMap.propTypes = propTypes;\nInteractiveMap.defaultProps = defaultProps;\nInteractiveMap.childContextTypes = childContextTypes;\n"],"file":"interactive-map.js"}